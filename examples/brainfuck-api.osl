import "os"
import "github.com/gin-gonic/gin"


def evaluate(string script) string (
  len = script.len

  int pointer = 0
  memory = 0
  total = 0
  out = ""
  data = {}

  openloops = 0
  
  int i = 1
  while i < len (
    char = script[i]

    if char == "+" (
      if memory == 255 (
        memory = 0
      ) else (
        memory += 1
      )
      data[pointer] = memory
    ) else if char == "-" (
      if memory == 0 (
        memory = 255
      ) else (
        memory -= 1
      )
      data[pointer] = memory
    ) else if char == ">" (
      pointer += 1
      if pointer > total (
        total = pointer
        data[pointer] = 0
      )
      memory = (data[pointer] ?? 0).toInt()
    ) else if char == "<" (
      if pointer > 0 (
        pointer -= 1
      )
      memory = (data[pointer] ?? 0).toInt()
    ) else if char == "." (
      out ++= memory.chr()
    ) else if char == "," (
      memory = "Enter a character".ask().ord()
      data[pointer] = memory
    ) else if char == "[" and memory == 0 (
      openloops = 1
      while openloops > 0 and i < len (
        i += 1
        char = script[i]
        if char == "[" (
          openloops += 1
        ) else if char == "]" (
          openloops -= 1
        )
      )
    ) else if char == "]" and memory != 0 (
      openloops = 1
      while openloops > 0 and i >= 0 (
        i -= 1
        char = script[i]
        if char == "[" (
          openloops -= 1
        ) else if char == "]" (
          openloops += 1
        )
      )
    )
    i += 1
  )
  return out
)

def main() (
    string port = os.Getenv("PORT")

    if port == "" (
        port = "8080"
        log "Defaulting to port" port
    )

    // Starts a new Gin instance with no middle-ware
    r = gin.New()

    // Define handlers
    r.GET("/", def(*gin.Context c) -> (
        string script = c.Query("script")
        log "Evaluating script" script
        c.JSON(200, {"result": evaluate(script)})
    ))

    // Listen and serve on defined port
    log "Listening on port" port
    r.Run(":" ++ port)
)